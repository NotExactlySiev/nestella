
	include "nesdefs.dasm"

;;;;; VARIABLES

ROM_PC	= $80
STACK	= $82


INS_JMP	= $4c


	seg.u ZEROPAGE
	org $0

;;;;; NES CARTRIDGE HEADER


	NES_HEADER 0,1,1,0 ; mapper 0, 1 PRGs, 1 CHR, horiz. mirror

;;;;; START OF CODE
Start:
	NES_INIT

	lda #$3f	; $3F -> A register
        sta PPU_ADDR	; write high byte first
	lda #$00	; $00 -> A register
        sta PPU_ADDR    ; $3F00 -> PPU address
        lda #$1c	; $1C = light blue color
        sta PPU_DATA    ; $1C -> PPU data
; activate PPU graphics
        lda #MASK_BG	; A = $08
        sta PPU_MASK	; enable rendering
        lda #CTRL_NMI	; A = $80
        sta PPU_CTRL	; enable NMI

	lda $effc
        sta ROM_PC
        lda $effd
        sta ROM_PC+1
        
        ldy #0
.loop
        lda (ROM_PC),y
        sta $300,y
        iny
        cpy #21
        bcc .loop

	lda #INS_JMP
        sta $300,y
        iny
        
        lda #<Back
        sta $300,y
        iny
        
        lda #>Back
        sta $300,y

	jsr Moz

.endless
	jmp .endless


Moz:
	pla
        sta STACK
        pla
        sta STACK+1
        jmp $300
        rts

Back:
	lda STACK+1
        pha
        lda STACK
        pha
        rts


NMIHandler:
	PPU_SETADDR $3f00
	lda $9
        lsr
        and #$30
        sta $80
        lda $9
        and #$0f
        ora $80
        
        sta PPU_DATA
        lda #0
        sta PPU_ADDR
        sta PPU_ADDR
        rti


;;;;; COMMON SUBROUTINES

	org $e000
        incbin "rom.a26"

	include "nesppu.dasm"

	NES_VECTORS

